name: Sensitive Files Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, master]

jobs:
  check-sensitive-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load sensitive files configuration
        id: config
        run: |
          if [ -f ".github/sensitive_files.yml" ]; then
            echo "config_file=.github/sensitive_files.yml" >> $GITHUB_OUTPUT
          else
            echo "config_file=.github/workflows/config/default_sensitive_files.yml" >> $GITHUB_OUTPUT
          fi

      - name: Check for sensitive files
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            const { execSync } = require('child_process');
            
            // Load configuration
            const configFile = '${{ steps.config.outputs.config_file }}';
            const config = yaml.load(fs.readFileSync(configFile, 'utf8'));
            
            const sensitivePatterns = config.sensitive_patterns || [];
            const excludedPatterns = config.excluded_patterns || [];
            
            // Get changed files
            let changedFiles = [];
            
            if (context.eventName === 'pull_request') {
              const { data: files } = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              changedFiles = files.map(file => file.filename);
            } else {
              // For push events, get all files in the repo
              try {
                const output = execSync('find . -type f -name "*" | grep -v ".git" | sed "s|^./||"', { encoding: 'utf8' });
                changedFiles = output.trim().split('\n').filter(line => line.length > 0);
              } catch (error) {
                console.log('Error getting files:', error.message);
                changedFiles = [];
              }
            }
            
            // Check for sensitive files
            const foundSensitiveFiles = [];
            
            for (const file of changedFiles) {
              // Check if file matches any sensitive pattern
              const isSensitive = sensitivePatterns.some(pattern => {
                const regex = new RegExp(pattern, 'i');
                return regex.test(file);
              });
              
              // Check if file is excluded
              const isExcluded = excludedPatterns.some(pattern => {
                const regex = new RegExp(pattern, 'i');
                return regex.test(file);
              });
              
              if (isSensitive && !isExcluded) {
                foundSensitiveFiles.push(file);
              }
            }
            
            if (foundSensitiveFiles.length > 0) {
              const fileList = foundSensitiveFiles.map(file => `- \`${file}\``).join('\n');
              
              const message = `ðŸš¨ **Sensitive Files Detected!**
              
              The following sensitive files were found in this ${context.eventName === 'pull_request' ? 'PR' : 'push'}:
              
              ${fileList}
              
              **Action Required:** Please remove these files from your commit or add them to the exclusion list in \`.github/sensitive_files.yml\`.
              
              **Note:** If these files are intentionally included (e.g., \`.env.example\`), add them to the \`excluded_patterns\` in your configuration.`;
              
              if (context.eventName === 'pull_request') {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: message
                });
              }
              
              core.setFailed(`Sensitive files detected: ${foundSensitiveFiles.join(', ')}`);
            } else {
              console.log('âœ… No sensitive files detected');
            } 